// Copyright 2000-2020 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
{
  parserClass="com.github.tylersmith34.intellijhashicorpsentinel.SentinelParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Sentinel"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.tylersmith34.intellijhashicorpsentinel.psi"
  psiImplPackage="com.github.tylersmith34.intellijhashicorpsentinel.psi.impl"

  elementTypeHolderClass="com.github.tylersmith34.intellijhashicorpsentinel.SentinelTypes"
  elementTypeClass="com.github.tylersmith34.intellijhashicorpsentinel.psi.SentinelElementType"
  tokenTypeClass="com.github.tylersmith34.intellijhashicorpsentinel.psi.SentinelTokenType"

  psiImplUtilClass="com.github.tylersmith34.intellijhashicorpsentinel.psi.SentinelPsiImplUtil"

    tokens = [
      line_comment = "regexp:(//.*)|(#.*)"
      block_comment = "regexp:/\*([^*]|\*[^/])*\*?(\*/)?"

      L_BRACKET='['
      R_BRACKET=']'
      L_CURLY='{'
      R_CURLY='}'
      COMMA=','
      EQUALS='='

      DOUBLE_QUOTED_STRING="regexp:\"([^\\\"\r\n]|\\[^\r\n])*\"?"
      SINGLE_QUOTED_STRING="regexp:'([^\\\'\r\n]|\\[^\r\n])*'?"

      NUMBER='regexp:-?(0x)?(0|[1-9])\d*(\.\d+)?([eE][-+]?\d+)?'

      TRUE='true'
      FALSE='false'
      NULL='null'
      UNDEFINED='undefined'

      ID="regexp:[a-zA-Z\.\-_][0-9a-zA-Z\.\-_]*"
    ]
}

simpleFile ::= item_*

private item_ ::= (property|COMMENT|CRLF)

property ::= (KEY? SEPARATOR VALUE?) | KEY {
  pin=3
  recoverWhile="recover_property"
//  mixin="org.intellij.sdk.language.psi.impl.SentinelNamedElementImpl"
//  implements="org.intellij.sdk.language.psi.SentinelNamedElement"
  methods=[getKey getValue getName setName getNameIdentifier getPresentation]
}

private recover_property ::= !(KEY|SEPARATOR|COMMENT)