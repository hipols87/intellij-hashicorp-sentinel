import "tfplan"

# Get all AWS vpcs from all modules
get_vpcs = func() {
    vpcs = []
    for tfplan.module_paths as path {
        vpcs += values(tfplan.module(path).resources.aws_vpc) else []
    }
    return vpcs
}

vpcs = get_vpcs()
vpc_must_have_tags = rule {
  all vpcs as name, instances {
    all instances as index, r {
      (length(r.applied.tags) else 0) > 0
    }
  }
}
isvalid = func(x, y, z) {
    mylist = [1, 2]
    for mylist as key, value {
        if(valid()){
            return true
        }
        if(!valid()){
            return false
        }
    }
    return true
}


vpc_hostnames_true = rule {
  all vpcs as name, instances {
    all instances as index, r {
      r.applied.enable_dns_hostnames == true
    }
  }
}

main = rule {
  (vpc_must_have_tags and vpc_hostnames_true) else true
}
isvalid = func(x, y) {
    valid = true
    if (!valid) {
        return x
    }
    return valid
}
isvalid = func(x, y, z) {
    valid = true
    if x < y and valid {
        valid = false
    }
    if checkMyValue(x) and (x < y) {
        return x
    }
    return valid
}